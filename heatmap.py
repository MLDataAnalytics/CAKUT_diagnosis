import os
import numpy as np
import skimage.color as imgco

heatmap_colors = np.array([(0.0, 0.0, 1.0), (0.0, 0.015625, 1.0), (0.0, 0.03125, 1.0), (0.0, 0.046875, 1.0), (0.0, 0.0625, 1.0), (0.0, 0.078125, 1.0), (0.0, 0.09375, 1.0), (0.0, 0.109375, 1.0), (0.0, 0.125, 1.0), (0.0, 0.140625, 1.0), 
            (0.0, 0.15625, 1.0), (0.0, 0.171875, 1.0), (0.0, 0.1875, 1.0), (0.0, 0.203125, 1.0), (0.0, 0.21875, 1.0), (0.0, 0.234375, 1.0), (0.0, 0.25, 1.0), (0.0, 0.265625, 1.0), (0.0, 0.28125, 1.0), (0.0, 0.296875, 1.0),
            (0.0, 0.3125, 1.0), (0.0, 0.328125, 1.0), (0.0, 0.34375, 1.0), (0.0, 0.359375, 1.0), (0.0, 0.375, 1.0), (0.0, 0.390625, 1.0), (0.0, 0.40625, 1.0), (0.0, 0.421875, 1.0), (0.0, 0.4375, 1.0), (0.0, 0.453125, 1.0),
            (0.0, 0.46875, 1.0), (0.0, 0.484375, 1.0), (0.0, 0.5, 1.0), (0.0, 0.515625, 1.0), (0.0, 0.53125, 1.0), (0.0, 0.546875, 1.0), (0.0, 0.5625, 1.0), (0.0, 0.578125, 1.0), (0.0, 0.59375, 1.0), (0.0, 0.609375, 1.0),
            (0.0, 0.625, 1.0), (0.0, 0.640625, 1.0), (0.0, 0.65625, 1.0), (0.0, 0.671875, 1.0), (0.0, 0.6875, 1.0), (0.0, 0.703125, 1.0), (0.0, 0.71875, 1.0), (0.0, 0.734375, 1.0), (0.0, 0.75, 1.0), (0.0, 0.765625, 1.0),
            (0.0, 0.78125, 1.0), (0.0, 0.796875, 1.0), (0.0, 0.8125, 1.0), (0.0, 0.828125, 1.0), (0.0, 0.84375, 1.0), (0.0, 0.859375, 1.0), (0.0, 0.875, 1.0), (0.0, 0.890625, 1.0), (0.0, 0.90625, 1.0), (0.0, 0.921875, 1.0),
            (0.0, 0.9375, 1.0), (0.0, 0.953125, 1.0), (0.0, 0.96875, 1.0), (0.0, 0.984375, 1.0), (0.0, 1.0, 1.0), (0.0, 1.0, 0.984375), (0.0, 1.0, 0.96875), (0.0, 1.0, 0.953125), (0.0, 1.0, 0.9375), (0.0, 1.0, 0.921875),
            (0.0, 1.0, 0.90625), (0.0, 1.0, 0.890625), (0.0, 1.0, 0.875), (0.0, 1.0, 0.859375), (0.0, 1.0, 0.84375), (0.0, 1.0, 0.828125), (0.0, 1.0, 0.8125), (0.0, 1.0, 0.796875), (0.0, 1.0, 0.78125), (0.0, 1.0, 0.765625),
            (0.0, 1.0, 0.75), (0.0, 1.0, 0.734375), (0.0, 1.0, 0.71875), (0.0, 1.0, 0.703125), (0.0, 1.0, 0.6875), (0.0, 1.0, 0.671875), (0.0, 1.0, 0.65625), (0.0, 1.0, 0.640625), (0.0, 1.0, 0.625), (0.0, 1.0, 0.609375),
            (0.0, 1.0, 0.59375), (0.0, 1.0, 0.578125), (0.0, 1.0, 0.5625), (0.0, 1.0, 0.546875), (0.0, 1.0, 0.53125), (0.0, 1.0, 0.515625), (0.0, 1.0, 0.5), (0.0, 1.0, 0.484375), (0.0, 1.0, 0.46875), (0.0, 1.0, 0.453125),
            (0.0, 1.0, 0.4375), (0.0, 1.0, 0.421875), (0.0, 1.0, 0.40625), (0.0, 1.0, 0.390625), (0.0, 1.0, 0.375), (0.0, 1.0, 0.359375), (0.0, 1.0, 0.34375), (0.0, 1.0, 0.328125), (0.0, 1.0, 0.3125), (0.0, 1.0, 0.296875),
            (0.0, 1.0, 0.28125), (0.0, 1.0, 0.265625), (0.0, 1.0, 0.25), (0.0, 1.0, 0.234375), (0.0, 1.0, 0.21875), (0.0, 1.0, 0.203125), (0.0, 1.0, 0.1875), (0.0, 1.0, 0.171875), (0.0, 1.0, 0.15625), (0.0, 1.0, 0.140625),
            (0.0, 1.0, 0.125), (0.0, 1.0, 0.109375), (0.0, 1.0, 0.09375), (0.0, 1.0, 0.078125), (0.0, 1.0, 0.0625), (0.0, 1.0, 0.046875), (0.0, 1.0, 0.03125), (0.0, 1.0, 0.015625), (0.0, 1.0, 0.0), (0.015625, 1.0, 0.0),
            (0.03125, 1.0, 0.0), (0.046875, 1.0, 0.0), (0.0625, 1.0, 0.0), (0.078125, 1.0, 0.0), (0.09375, 1.0, 0.0), (0.109375, 1.0, 0.0), (0.125, 1.0, 0.0), (0.140625, 1.0, 0.0), (0.15625, 1.0, 0.0), (0.171875, 1.0, 0.0),
            (0.1875, 1.0, 0.0), (0.203125, 1.0, 0.0), (0.21875, 1.0, 0.0), (0.234375, 1.0, 0.0), (0.25, 1.0, 0.0), (0.265625, 1.0, 0.0), (0.28125, 1.0, 0.0), (0.296875, 1.0, 0.0), (0.3125, 1.0, 0.0), (0.328125, 1.0, 0.0),
            (0.34375, 1.0, 0.0), (0.359375, 1.0, 0.0), (0.375, 1.0, 0.0), (0.390625, 1.0, 0.0), (0.40625, 1.0, 0.0), (0.421875, 1.0, 0.0), (0.4375, 1.0, 0.0), (0.453125, 1.0, 0.0), (0.46875, 1.0, 0.0), (0.484375, 1.0, 0.0),
            (0.5, 1.0, 0.0), (0.515625, 1.0, 0.0), (0.53125, 1.0, 0.0), (0.546875, 1.0, 0.0), (0.5625, 1.0, 0.0), (0.578125, 1.0, 0.0), (0.59375, 1.0, 0.0), (0.609375, 1.0, 0.0), (0.625, 1.0, 0.0), (0.640625, 1.0, 0.0),
            (0.65625, 1.0, 0.0), (0.671875, 1.0, 0.0), (0.6875, 1.0, 0.0), (0.703125, 1.0, 0.0), (0.71875, 1.0, 0.0), (0.734375, 1.0, 0.0), (0.75, 1.0, 0.0), (0.765625, 1.0, 0.0), (0.78125, 1.0, 0.0), (0.796875, 1.0, 0.0),
            (0.8125, 1.0, 0.0), (0.828125, 1.0, 0.0), (0.84375, 1.0, 0.0), (0.859375, 1.0, 0.0), (0.875, 1.0, 0.0), (0.890625, 1.0, 0.0), (0.90625, 1.0, 0.0), (0.921875, 1.0, 0.0), (0.9375, 1.0, 0.0), (0.953125, 1.0, 0.0),
            (0.96875, 1.0, 0.0), (0.984375, 1.0, 0.0), (1.0, 1.0, 0.0), (1.0, 0.984375, 0.0), (1.0, 0.96875, 0.0), (1.0, 0.953125, 0.0), (1.0, 0.9375, 0.0), (1.0, 0.921875, 0.0), (1.0, 0.90625, 0.0), (1.0, 0.890625, 0.0),
            (1.0, 0.875, 0.0), (1.0, 0.859375, 0.0), (1.0, 0.84375, 0.0), (1.0, 0.828125, 0.0), (1.0, 0.8125, 0.0), (1.0, 0.796875, 0.0), (1.0, 0.78125, 0.0), (1.0, 0.765625, 0.0), (1.0, 0.75, 0.0), (1.0, 0.734375, 0.0),
            (1.0, 0.71875, 0.0), (1.0, 0.703125, 0.0), (1.0, 0.6875, 0.0), (1.0, 0.671875, 0.0), (1.0, 0.65625, 0.0), (1.0, 0.640625, 0.0), (1.0, 0.625, 0.0), (1.0, 0.609375, 0.0), (1.0, 0.59375, 0.0), (1.0, 0.578125, 0.0),
            (1.0, 0.5625, 0.0), (1.0, 0.546875, 0.0), (1.0, 0.53125, 0.0), (1.0, 0.515625, 0.0), (1.0, 0.5, 0.0), (1.0, 0.484375, 0.0), (1.0, 0.46875, 0.0), (1.0, 0.453125, 0.0), (1.0, 0.4375, 0.0), (1.0, 0.421875, 0.0),
            (1.0, 0.40625, 0.0), (1.0, 0.390625, 0.0), (1.0, 0.375, 0.0), (1.0, 0.359375, 0.0), (1.0, 0.34375, 0.0), (1.0, 0.328125, 0.0), (1.0, 0.3125, 0.0), (1.0, 0.296875, 0.0), (1.0, 0.28125, 0.0), (1.0, 0.265625, 0.0),
            (1.0, 0.25, 0.0), (1.0, 0.234375, 0.0), (1.0, 0.21875, 0.0), (1.0, 0.203125, 0.0), (1.0, 0.1875, 0.0), (1.0, 0.171875, 0.0), (1.0, 0.15625, 0.0), (1.0, 0.140625, 0.0), (1.0, 0.125, 0.0), (1.0, 0.109375, 0.0),
            (1.0, 0.09375, 0.0), (1.0, 0.078125, 0.0), (1.0, 0.0625, 0.0), (1.0, 0.046875, 0.0), (1.0, 0.03125, 0.0), (1.0, 0.015625, 0.0)])
def heatmap(img): # shape: [h,w], value range [0,255]
    #colors = []
    #for i in range(256):
    #    basic = [(0,0,1),(0,1,1),(0,1,0),(1,1,0),(1,0,0)]
    #    value = i*4/256
    #    id1 = i//64
    #    id2 = id1+1
    #    between = value - float(id1)
    #    r = (basic[id2][0] - basic[id1][0])*between + basic[id1][0]
    #    #r /= 2
    #    g = (basic[id2][1] - basic[id1][1])*between + basic[id1][1]
    #    #g /= 2
    #    b = (basic[id2][2] - basic[id1][2])*between + basic[id1][2]
    #    #b /= 2
    #    colors.append((r,g,b))
    #print("colors:%s" % str(colors))
    colors = heatmap_colors[np.unique(img),:]
    heatmap = imgco.label2rgb(img,colors=colors)
    #print("heatmap unique:%d" % np.unique(img).shape[0])
    #print("heatmap max:%f"% np.max(img))
    #print("heatmap max:%f"% np.max(heatmap[:,:,0]))

    return heatmap

def heatmap_with_img(img,heatmap,scale=True):
    # img shape: [h,w], or [h,w,3], value rangel: [0,1]
    # heatmap shape:[h,w]
    if scale is True:
        heatmap_max = np.max(heatmap)
        heatmap_min = np.min(heatmap)
        heatmap = (heatmap-heatmap_min)/(heatmap_max-heatmap_min)
    heatmap_rgb = heatmap((255*heatmap).astype(np.uint8))

    if len(img.shape) >= 3:
        mixed = img*np.expand_dims(1-heatmap,axis=2)+255.0*heatmap_rgb*np.expand_dims(heatmap,axis=2)
    else:
        mixed = img*(1-heatmap)+255.0*heatmap_rgb*heatmap

    return mixed.astype(np.uint8)
